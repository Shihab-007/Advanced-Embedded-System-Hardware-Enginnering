library ieee;
use ieee.std_logic_1164.all;

entity VendingMachine_TB is
end entity VendingMachine_TB;

architecture Behavioral of VendingMachine_TB is
  -- Component declaration for the unit under test (UUT)
  component VendingMachine is
    port (
      clk : in std_logic;
      reset : in std_logic;
      coin : in std_logic_vector(1 downto 0);
      product1 : in std_logic;
      product2 : in std_logic;
      product3 : in std_logic;
      dispense : out std_logic;
      refund : out std_logic
    );
  end component VendingMachine;

  -- Signal declarations
  signal clk : std_logic := '0';
  signal reset : std_logic := '0';
  signal coin : std_logic_vector(1 downto 0) := "00";
  signal product1 : std_logic := '0';
  signal product2 : std_logic := '0';
  signal product3 : std_logic := '0';
  signal dispense : std_logic;
  signal refund : std_logic;

begin
  -- Instantiate the unit under test (UUT)
  uut: VendingMachine
    port map (
      clk => clk,
      reset => reset,
      coin => coin,
      product1 => product1,
      product2 => product2,
      product3 => product3,
      dispense => dispense,
      refund => refund
    );

  -- Stimulus process
  stim_proc: process
  begin
    -- Initialize inputs
    reset <= '1';
    coin <= "00";
    product1 <= '0';
    product2 <= '0';
    product3 <= '0';

    wait for 10 ns;
    reset <= '0';

    wait for 10 ns;
    product1 <= '1';

    wait for 10 ns;
    product1 <= '0';
    product2 <= '1';

    wait for 10 ns;
    coin <= "01";

    wait for 10 ns;
    coin <= "10";

    wait for 10 ns;
    coin <= "11";

    wait for 10 ns;
    product3 <= '1';

    wait for 100 ns;
    -- Add more stimulus as needed

    wait;
  end process stim_proc;

end architecture Behavioral;
